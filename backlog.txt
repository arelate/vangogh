Backend

- move updated enumeration to take command line parameters into account - in the future this will also be a central point for whitelists/blacklists

- change clear updated from unconditional clearing to receipt based system. To clear updated we'll need successful completion of several activities since product was added as updated:
-- need to track when product was added
-- need to define this dependency system
-- need to change clear updated model to check everything above

- investigate /user/data/games (from https://www.gog.com/forum/general/unofficial_gog_api_documentation/page2) and game_type == pack specifically

- activityQueueBacklog.txt

- change functional controllers to work on product model type and have activities loop updates using those 

- introduce repair controllers - chunks repair (download by chunk, validate by chunk); validationFileIsNotValid (see if XML can't be loaded and do simple text transforms for known issues)

- [Backlog] consider whitelists, blacklists for product operations

- [Backlog] serve data and frontend files via http or better yet websockets server

- debug data validation - why stored file md5 doesn't match precomputed hash at push (encoding? special characters?)

- unit tests

Frontend:

- es6 modules, fetch, promises, custom properties
- move to a new data model with data controllers and dynamic data loading
- Use notifications API on web client view on updates
- motion
- mobile layouts