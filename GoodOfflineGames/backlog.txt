Backend:W

- settings loading as taskActivity? It should be possible to break Program.cs dependency on settings with taskActivity manager that would decide what taskActivity to run next if at all

- stop and resume - make a session plan based on settings and remove taskActivities upon completion. Ask to reset session if one exists already when starting

- break lines and present information better in presentation controllers, e.g. progress on separate lines

- actually implement templating for the output, perhaps use format like [color:any message]

- wrap download activities in try/catch

- mark all GOG specific things as /* GOG.com CUSTOM */

- output log in plain text human readable format (and as a taskActivity again and dated)
	- provide summary - all failures, warnings, bytes transferred, etc.
	- transform taskStatusPresentationController to abstract same code for console presentation and log presentation
	- add Log entries to taskStatus to log additional debug information
	- convert taskStatusTree to list
	- then item by item list of taskStatus human readable presentation start, complete, duration, child tasks, etc

- repair controller?
	- validate full file and return validation results with all failing chunks and specific validation problems
	- consolidate validation report and schedule repair
	- refactor download controller to download range

- serve data and frontend files via http

- make directories configurable

- add settings section "special" to set all to update, and future web frontend tasks

- current task activities are monolithic - consider breaking them apart somehow for testability

- unit tests

Frontend:

- es6 modules, fetch, promises, custom properties
- move to a new data model with data controllers and dynamic data loading
- Use notifications API on web client view on updates
- motion
- mobile layouts