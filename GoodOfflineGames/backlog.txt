Backend

- guard product files and validation files download with the throttleController

- make hashes more resilient to crashes

- add Log entries to taskStatus to log additional debug information like inputs, processed, etc.?

- repair controller?
	- validate full file and return validation results with all failing chunks and specific validation problems
	- consolidate validation report and schedule repair
	- refactor download controller to download range

- serve data and frontend files via http

- current task activities are monolithic - consider breaking them apart somehow for testability

- unit tests

Frontend:

- es6 modules, fetch, promises, custom properties
- move to a new data model with data controllers and dynamic data loading
- Use notifications API on web client view on updates
- motion
- mobile layouts